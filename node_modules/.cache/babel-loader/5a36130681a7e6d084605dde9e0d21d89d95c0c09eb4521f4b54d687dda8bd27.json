{"ast":null,"code":"// import React, { useState } from \"react\";\n// import Sidebar from \"../comman/Sidebar\";\n// import Modal from \"react-modal\";\n// import { Link } from \"react-router-dom\";\n// import { sendNotificationToSpecificUser } from \"../../api\";\n\n// function NotificationByPhonezNo() {\n//   const [formData, setFormData] = useState({\n//     phoneNumber: \"\",\n//     title: \"\",\n//     message: \"\",\n//   });\n//   const [errors, setErrors] = useState({});\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const openModal = () => setIsModalOpen(true);\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     const newErrors = {};\n//     if (!formData.phoneNumber)\n//       newErrors.phoneNumber = \"Phone Number is required\";\n//     if (!formData.title) newErrors.title = \"Title is required\";\n//     if (!formData.message) newErrors.message = \"Message is required\";\n//     if (Object.keys(newErrors).length > 0) {\n//       setErrors(newErrors);\n//       return;\n//     }\n//     try {\n//       const response = await sendNotificationToSpecificUser({\n//         phoneNumber: formData.phoneNumber,\n//         title:formData.title, // Convert to integer\n//         message:formData.message,\n//       });\n//       console.log(\"API Response:\", response);\n//       openModal();\n//       setFormData({\n//         phoneNumber: \"\",\n//         title: \"\",\n//         message: \"\",\n//       });\n//       setErrors({});\n//     } catch (error) {\n//       console.error(\"API Error:\", error);\n//     }\n//   };\n//   return (\n//     <div>\n//       <body id=\"page-top\">\n//         <div id=\"wrapper\" className=\"row m-0\">\n//           <div className=\"col-lg-2 col-xl-2 col-md-2 col-sm-2 p-0\">\n//             <Sidebar />\n//           </div>\n//           <div className=\"col-lg-10 col-xl-10 col-md-10 col-sm-10 p-0\">\n//             <div id=\"content-wrapper bg-white\" className=\"d-flex flex-column\">\n//               <div id=\"content bg-white\">\n//                 <div className=\"card shadow\">\n//                   <div className=\"card-body row p-3\">\n//                     <div className=\"col-lg-9\">\n//                       <h5 className=\"mt-2\">Add Notification By Phone No.</h5>\n//                     </div>\n//                     <div className=\"col-lg-3\">\n//                       <Link\n//                         className=\"text-white btn btn-primary btn-lg justify-content-end\"\n//                         to={`/list-of-all-notification-specific-user`}\n//                         state={{marginLeft: \"50%\"}}\n//                       >\n//                         List Of All Notification\n//                       </Link>\n//                     </div>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"card shadow m-5 bg-white\">\n//                   <div className=\"card-body\">\n//                     <form onSubmit={handleFormSubmit}>\n//                       <div className=\"form-group mb-4\">\n//                         <label htmlFor=\"prizePool\">Phone No.</label>\n//                         <input\n//                           type=\"text\"\n//                           id=\"prizePool\"\n//                           className={`form-control ${\n//                             errors.phoneNumber ? \"is-invalid\" : \"\"\n//                           }`}\n//                           placeholder=\"Enter Phone No.\"\n//                           value={formData.phoneNumber}\n//                           onChange={(e) =>\n//                             setFormData({\n//                               ...formData,\n//                               phoneNumber: e.target.value,\n//                             })\n//                           }\n//                         />\n//                         {errors.phoneNumber && (\n//                           <div className=\"invalid-feedback\">\n//                             {errors.phoneNumber}\n//                           </div>\n//                         )}\n//                       </div>\n//                       <div className=\"form-group mb-4\">\n//                         <label htmlFor=\"entryFee\">Title</label>\n//                         <input\n//                           type=\"text\"\n//                           id=\"entryFee\"\n//                           className={`form-control ${\n//                             errors.title ? \"is-invalid\" : \"\"\n//                           }`}\n//                           placeholder=\"Enter Title\"\n//                           value={formData.title}\n//                           onChange={(e) =>\n//                             setFormData({\n//                               ...formData,\n//                               title: e.target.value,\n//                             })\n//                           }\n//                         />\n//                         {errors.title && (\n//                           <div className=\"invalid-feedback\">{errors.title}</div>\n//                         )}\n//                       </div>\n//                       <div className=\"form-group mb-4\">\n//                         <label htmlFor=\"entryFee\">Message</label>\n//                         <input\n//                           type=\"text\"\n//                           id=\"entryFee\"\n//                           className={`form-control ${\n//                             errors.message ? \"is-invalid\" : \"\"\n//                           }`}\n//                           placeholder=\"Enter message\"\n//                           value={formData.message}\n//                           onChange={(e) =>\n//                             setFormData({\n//                               ...formData,\n//                               message: e.target.value,\n//                             })\n//                           }\n//                         />\n//                         {errors.message && (\n//                           <div className=\"invalid-feedback\">\n//                             {errors.message}\n//                           </div>\n//                         )}\n//                       </div>\n//                       <div className=\"text-lg-start mt-4 pt-2\">\n//                         <button\n//                           type=\"submit\"\n//                           className=\"btn btn-lg\"\n//                           style={{\n//                             backgroundColor: \"#924ACD\",\n//                             color: \"#fff\",\n//                           }}\n//                         >\n//                           Proceed\n//                         </button>\n//                       </div>\n//                     </form>\n//                   </div>\n//                 </div>\n//               </div>\n//               <footer className=\"sticky-footer bg-white\">\n//                 <div className=\"container my-auto\">\n//                   <div className=\"copyright text-center my-auto\">\n//                     <span>Copyright &copy; Your Website 2023</span>\n//                   </div>\n//                 </div>\n//               </footer>\n//             </div>\n//           </div>\n//         </div>\n//         <a className=\"scroll-to-top rounded\" href=\"#page-top\">\n//           <i className=\"fas fa-angle-up\"></i>\n//         </a>\n//         <Modal\n//           isOpen={isModalOpen}\n//           onRequestClose={closeModal}\n//           contentLabel=\"API Response Modal\"\n//           style={{\n//             content: {\n//               width: \"25%\", // Set the width as you need\n//               height: \"25%\", // Set the height as you need\n//               margin: \"auto\", // Center the modal horizontally\n//               backgroundColor: \"lightblue\", // Set the background color\n//               borderRadius: \"8px\", // Set border-radius for rounded corners\n//               padding: \"20px\", // Set padding\n//             },\n//             overlay: {\n//               backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Set overlay color with some transparency\n//             },\n//           }}\n//         >\n//           <h2>Successful</h2>\n//           <p>Title & Message Added Successfully</p>\n//           <button onClick={closeModal} style={{ width: \"100px\" }}>\n//             Ok\n//           </button>\n//         </Modal>\n//       </body>\n//     </div>\n//   );\n// }\n\n// export default NotificationByPhonezNo;","map":{"version":3,"names":[],"sources":["/Users/apple/Documents/dairy/funzy11_admin/src/components/notification/NotificationByPhonezNo.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import Sidebar from \"../comman/Sidebar\";\n// import Modal from \"react-modal\";\n// import { Link } from \"react-router-dom\";\n// import { sendNotificationToSpecificUser } from \"../../api\";\n\n// function NotificationByPhonezNo() {\n//   const [formData, setFormData] = useState({\n//     phoneNumber: \"\",\n//     title: \"\",\n//     message: \"\",\n//   });\n//   const [errors, setErrors] = useState({});\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const openModal = () => setIsModalOpen(true);\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   const handleFormSubmit = async (e) => {\n//     e.preventDefault();\n//     const newErrors = {};\n//     if (!formData.phoneNumber)\n//       newErrors.phoneNumber = \"Phone Number is required\";\n//     if (!formData.title) newErrors.title = \"Title is required\";\n//     if (!formData.message) newErrors.message = \"Message is required\";\n//     if (Object.keys(newErrors).length > 0) {\n//       setErrors(newErrors);\n//       return;\n//     }\n//     try {\n//       const response = await sendNotificationToSpecificUser({\n//         phoneNumber: formData.phoneNumber,\n//         title:formData.title, // Convert to integer\n//         message:formData.message,\n//       });\n//       console.log(\"API Response:\", response);\n//       openModal();\n//       setFormData({\n//         phoneNumber: \"\",\n//         title: \"\",\n//         message: \"\",\n//       });\n//       setErrors({});\n//     } catch (error) {\n//       console.error(\"API Error:\", error);\n//     }\n//   };\n//   return (\n//     <div>\n//       <body id=\"page-top\">\n//         <div id=\"wrapper\" className=\"row m-0\">\n//           <div className=\"col-lg-2 col-xl-2 col-md-2 col-sm-2 p-0\">\n//             <Sidebar />\n//           </div>\n//           <div className=\"col-lg-10 col-xl-10 col-md-10 col-sm-10 p-0\">\n//             <div id=\"content-wrapper bg-white\" className=\"d-flex flex-column\">\n//               <div id=\"content bg-white\">\n//                 <div className=\"card shadow\">\n//                   <div className=\"card-body row p-3\">\n//                     <div className=\"col-lg-9\">\n//                       <h5 className=\"mt-2\">Add Notification By Phone No.</h5>\n//                     </div>\n//                     <div className=\"col-lg-3\">\n//                       <Link\n//                         className=\"text-white btn btn-primary btn-lg justify-content-end\"\n//                         to={`/list-of-all-notification-specific-user`}\n//                         state={{marginLeft: \"50%\"}}\n//                       >\n//                         List Of All Notification\n//                       </Link>\n//                     </div>\n//                   </div>\n//                 </div>\n\n//                 <div className=\"card shadow m-5 bg-white\">\n//                   <div className=\"card-body\">\n//                     <form onSubmit={handleFormSubmit}>\n//                       <div className=\"form-group mb-4\">\n//                         <label htmlFor=\"prizePool\">Phone No.</label>\n//                         <input\n//                           type=\"text\"\n//                           id=\"prizePool\"\n//                           className={`form-control ${\n//                             errors.phoneNumber ? \"is-invalid\" : \"\"\n//                           }`}\n//                           placeholder=\"Enter Phone No.\"\n//                           value={formData.phoneNumber}\n//                           onChange={(e) =>\n//                             setFormData({\n//                               ...formData,\n//                               phoneNumber: e.target.value,\n//                             })\n//                           }\n//                         />\n//                         {errors.phoneNumber && (\n//                           <div className=\"invalid-feedback\">\n//                             {errors.phoneNumber}\n//                           </div>\n//                         )}\n//                       </div>\n//                       <div className=\"form-group mb-4\">\n//                         <label htmlFor=\"entryFee\">Title</label>\n//                         <input\n//                           type=\"text\"\n//                           id=\"entryFee\"\n//                           className={`form-control ${\n//                             errors.title ? \"is-invalid\" : \"\"\n//                           }`}\n//                           placeholder=\"Enter Title\"\n//                           value={formData.title}\n//                           onChange={(e) =>\n//                             setFormData({\n//                               ...formData,\n//                               title: e.target.value,\n//                             })\n//                           }\n//                         />\n//                         {errors.title && (\n//                           <div className=\"invalid-feedback\">{errors.title}</div>\n//                         )}\n//                       </div>\n//                       <div className=\"form-group mb-4\">\n//                         <label htmlFor=\"entryFee\">Message</label>\n//                         <input\n//                           type=\"text\"\n//                           id=\"entryFee\"\n//                           className={`form-control ${\n//                             errors.message ? \"is-invalid\" : \"\"\n//                           }`}\n//                           placeholder=\"Enter message\"\n//                           value={formData.message}\n//                           onChange={(e) =>\n//                             setFormData({\n//                               ...formData,\n//                               message: e.target.value,\n//                             })\n//                           }\n//                         />\n//                         {errors.message && (\n//                           <div className=\"invalid-feedback\">\n//                             {errors.message}\n//                           </div>\n//                         )}\n//                       </div>\n//                       <div className=\"text-lg-start mt-4 pt-2\">\n//                         <button\n//                           type=\"submit\"\n//                           className=\"btn btn-lg\"\n//                           style={{\n//                             backgroundColor: \"#924ACD\",\n//                             color: \"#fff\",\n//                           }}\n//                         >\n//                           Proceed\n//                         </button>\n//                       </div>\n//                     </form>\n//                   </div>\n//                 </div>\n//               </div>\n//               <footer className=\"sticky-footer bg-white\">\n//                 <div className=\"container my-auto\">\n//                   <div className=\"copyright text-center my-auto\">\n//                     <span>Copyright &copy; Your Website 2023</span>\n//                   </div>\n//                 </div>\n//               </footer>\n//             </div>\n//           </div>\n//         </div>\n//         <a className=\"scroll-to-top rounded\" href=\"#page-top\">\n//           <i className=\"fas fa-angle-up\"></i>\n//         </a>\n//         <Modal\n//           isOpen={isModalOpen}\n//           onRequestClose={closeModal}\n//           contentLabel=\"API Response Modal\"\n//           style={{\n//             content: {\n//               width: \"25%\", // Set the width as you need\n//               height: \"25%\", // Set the height as you need\n//               margin: \"auto\", // Center the modal horizontally\n//               backgroundColor: \"lightblue\", // Set the background color\n//               borderRadius: \"8px\", // Set border-radius for rounded corners\n//               padding: \"20px\", // Set padding\n//             },\n//             overlay: {\n//               backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Set overlay color with some transparency\n//             },\n//           }}\n//         >\n//           <h2>Successful</h2>\n//           <p>Title & Message Added Successfully</p>\n//           <button onClick={closeModal} style={{ width: \"100px\" }}>\n//             Ok\n//           </button>\n//         </Modal>\n//       </body>\n//     </div>\n//   );\n// }\n\n// export default NotificationByPhonezNo;\n\n\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}